{"name":"Miam","tagline":"Miam is a tool to manage IAM. It defines the state of IAM using DSL, and updates IAM according to DSL.","body":"## Installation\r\n\r\nAdd this line to your application's Gemfile:\r\n\r\n```ruby\r\ngem 'miam'\r\n```\r\n\r\nAnd then execute:\r\n\r\n    $ bundle\r\n\r\nOr install it yourself as:\r\n\r\n    $ gem install miam\r\n\r\n## Usage\r\n\r\n```sh\r\nexport AWS_ACCESS_KEY_ID='...'\r\nexport AWS_SECRET_ACCESS_KEY='...'\r\nexport AWS_REGION='us-east-1'\r\nmiam -e -o IAMfile  # export IAM\r\nvi IAMfile\r\nmiam -a --dry-run\r\nmiam -a             # apply `IAMfile`\r\n```\r\n\r\n## Help\r\n\r\n```\r\nUsage: miam [options]\r\n    -p, --profile PROFILE_NAME\r\n        --credentials-path PATH\r\n    -k, --access-key ACCESS_KEY\r\n    -s, --secret-key SECRET_KEY\r\n    -r, --region REGION\r\n    -a, --apply\r\n    -f, --file FILE\r\n        --dry-run\r\n        --account-output FILE\r\n    -e, --export\r\n    -o, --output FILE\r\n        --split\r\n        --split-more\r\n        --export-concurrency N\r\n        --target REGEXP\r\n        --no-color\r\n        --no-progress\r\n        --debug\r\n```\r\n\r\n## IAMfile example\r\n\r\n```ruby\r\nrequire 'other/iamfile'\r\n\r\nuser \"bob\", :path => \"/developer/\" do\r\n  login_profile :password_reset_required=>true\r\n\r\n  groups(\r\n    \"Admin\"\r\n  )\r\n\r\n  policy \"bob-policy\" do\r\n    {\"Version\"=>\"2012-10-17\",\r\n     \"Statement\"=>\r\n      [{\"Action\"=>\r\n         [\"s3:Get*\",\r\n          \"s3:List*\"],\r\n        \"Effect\"=>\"Allow\",\r\n        \"Resource\"=>\"*\"}]}\r\n  end\r\nend\r\n\r\nuser \"mary\", :path => \"/staff/\" do\r\n  # login_profile :password_reset_required=>true\r\n\r\n  groups(\r\n    # no group\r\n  )\r\n\r\n  policy \"s3-readonly\" do\r\n    {\"Version\"=>\"2012-10-17\",\r\n     \"Statement\"=>\r\n      [{\"Action\"=>\r\n         [\"s3:Get*\",\r\n          \"s3:List*\"],\r\n        \"Effect\"=>\"Allow\",\r\n        \"Resource\"=>\"*\"}]}\r\n  end\r\n\r\n  policy \"route53-readonly\" do\r\n    {\"Version\"=>\"2012-10-17\",\r\n     \"Statement\"=>\r\n      [{\"Action\"=>\r\n         [\"route53:Get*\",\r\n          \"route53:List*\"],\r\n        \"Effect\"=>\"Allow\",\r\n        \"Resource\"=>\"*\"}]}\r\n  end\r\nend\r\n\r\ngroup \"Admin\", :path => \"/admin/\" do\r\n  policy \"Admin\" do\r\n    {\"Statement\"=>[{\"Effect\"=>\"Allow\", \"Action\"=>\"*\", \"Resource\"=>\"*\"}]}\r\n  end\r\nend\r\n\r\nrole \"S3\", :path => \"/\" do\r\n  instance_profiles(\r\n    \"S3\"\r\n  )\r\n\r\n  assume_role_policy_document do\r\n    {\"Version\"=>\"2012-10-17\",\r\n     \"Statement\"=>\r\n      [{\"Sid\"=>\"\",\r\n        \"Effect\"=>\"Allow\",\r\n        \"Principal\"=>{\"Service\"=>\"ec2.amazonaws.com\"},\r\n        \"Action\"=>\"sts:AssumeRole\"}]}\r\n  end\r\n\r\n  policy \"S3-role-policy\" do\r\n    {\"Version\"=>\"2012-10-17\",\r\n     \"Statement\"=>[{\"Effect\"=>\"Allow\", \"Action\"=>\"*\", \"Resource\"=>\"*\"}]}\r\n  end\r\nend\r\n\r\ninstance_profile \"S3\", :path => \"/\"\r\n```\r\n\r\n## Rename\r\n\r\n```ruby\r\nrequire 'other/iamfile'\r\n\r\nuser \"bob2\", :path => \"/developer/\", :renamed_from => \"bob\" do\r\n  # ...\r\nend\r\n\r\ngroup \"Admin2\", :path => \"/admin/\". :renamed_from => \"Admin\" do\r\n  # ...\r\nend\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}